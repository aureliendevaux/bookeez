/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as layoutsMemberlayoutImport } from './routes/(layouts)/member_layout'
import { Route as layoutsAuthlayoutImport } from './routes/(layouts)/auth_layout'
import { Route as ReadingListIndexImport } from './routes/(member)/reading-list/index'
import { Route as AccountIndexImport } from './routes/(member)/account/index'

// Create Virtual Routes

const IndexlazyImport = createFileRoute('/_member_layout/')()
const AuthLoginlazyImport = createFileRoute('/_auth_layout/auth/login')()

// Create/Update Routes

const layoutsMemberlayoutRoute = layoutsMemberlayoutImport.update({
  id: '/_member_layout',
  getParentRoute: () => rootRoute,
} as any)

const layoutsAuthlayoutRoute = layoutsAuthlayoutImport.update({
  id: '/_auth_layout',
  getParentRoute: () => rootRoute,
} as any)

const IndexlazyRoute = IndexlazyImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => layoutsMemberlayoutRoute,
} as any).lazy(() =>
  import('./routes/(member)/index.lazy').then((d) => d.Route),
)

const ReadingListIndexRoute = ReadingListIndexImport.update({
  id: '/reading-list/',
  path: '/reading-list/',
  getParentRoute: () => layoutsMemberlayoutRoute,
} as any)

const AccountIndexRoute = AccountIndexImport.update({
  id: '/account/',
  path: '/account/',
  getParentRoute: () => layoutsMemberlayoutRoute,
} as any)

const AuthLoginlazyRoute = AuthLoginlazyImport.update({
  id: '/auth/login',
  path: '/auth/login',
  getParentRoute: () => layoutsAuthlayoutRoute,
} as any).lazy(() => import('./routes/auth/login.lazy').then((d) => d.Route))

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_auth_layout': {
      id: '/_auth_layout'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof layoutsAuthlayoutImport
      parentRoute: typeof rootRoute
    }
    '/_member_layout': {
      id: '/_member_layout'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof layoutsMemberlayoutImport
      parentRoute: typeof rootRoute
    }
    '/_member_layout/': {
      id: '/_member_layout/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexlazyImport
      parentRoute: typeof layoutsMemberlayoutImport
    }
    '/_auth_layout/auth/login': {
      id: '/_auth_layout/auth/login'
      path: '/auth/login'
      fullPath: '/auth/login'
      preLoaderRoute: typeof AuthLoginlazyImport
      parentRoute: typeof layoutsAuthlayoutImport
    }
    '/_member_layout/account/': {
      id: '/_member_layout/account/'
      path: '/account'
      fullPath: '/account'
      preLoaderRoute: typeof AccountIndexImport
      parentRoute: typeof layoutsMemberlayoutImport
    }
    '/_member_layout/reading-list/': {
      id: '/_member_layout/reading-list/'
      path: '/reading-list'
      fullPath: '/reading-list'
      preLoaderRoute: typeof ReadingListIndexImport
      parentRoute: typeof layoutsMemberlayoutImport
    }
  }
}

// Create and export the route tree

interface layoutsAuthlayoutRouteChildren {
  AuthLoginlazyRoute: typeof AuthLoginlazyRoute
}

const layoutsAuthlayoutRouteChildren: layoutsAuthlayoutRouteChildren = {
  AuthLoginlazyRoute: AuthLoginlazyRoute,
}

const layoutsAuthlayoutRouteWithChildren =
  layoutsAuthlayoutRoute._addFileChildren(layoutsAuthlayoutRouteChildren)

interface layoutsMemberlayoutRouteChildren {
  IndexlazyRoute: typeof IndexlazyRoute
  AccountIndexRoute: typeof AccountIndexRoute
  ReadingListIndexRoute: typeof ReadingListIndexRoute
}

const layoutsMemberlayoutRouteChildren: layoutsMemberlayoutRouteChildren = {
  IndexlazyRoute: IndexlazyRoute,
  AccountIndexRoute: AccountIndexRoute,
  ReadingListIndexRoute: ReadingListIndexRoute,
}

const layoutsMemberlayoutRouteWithChildren =
  layoutsMemberlayoutRoute._addFileChildren(layoutsMemberlayoutRouteChildren)

export interface FileRoutesByFullPath {
  '': typeof layoutsMemberlayoutRouteWithChildren
  '/': typeof IndexlazyRoute
  '/auth/login': typeof AuthLoginlazyRoute
  '/account': typeof AccountIndexRoute
  '/reading-list': typeof ReadingListIndexRoute
}

export interface FileRoutesByTo {
  '': typeof layoutsAuthlayoutRouteWithChildren
  '/': typeof IndexlazyRoute
  '/auth/login': typeof AuthLoginlazyRoute
  '/account': typeof AccountIndexRoute
  '/reading-list': typeof ReadingListIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/_auth_layout': typeof layoutsAuthlayoutRouteWithChildren
  '/_member_layout': typeof layoutsMemberlayoutRouteWithChildren
  '/_member_layout/': typeof IndexlazyRoute
  '/_auth_layout/auth/login': typeof AuthLoginlazyRoute
  '/_member_layout/account/': typeof AccountIndexRoute
  '/_member_layout/reading-list/': typeof ReadingListIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '' | '/' | '/auth/login' | '/account' | '/reading-list'
  fileRoutesByTo: FileRoutesByTo
  to: '' | '/' | '/auth/login' | '/account' | '/reading-list'
  id:
    | '__root__'
    | '/_auth_layout'
    | '/_member_layout'
    | '/_member_layout/'
    | '/_auth_layout/auth/login'
    | '/_member_layout/account/'
    | '/_member_layout/reading-list/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  layoutsAuthlayoutRoute: typeof layoutsAuthlayoutRouteWithChildren
  layoutsMemberlayoutRoute: typeof layoutsMemberlayoutRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  layoutsAuthlayoutRoute: layoutsAuthlayoutRouteWithChildren,
  layoutsMemberlayoutRoute: layoutsMemberlayoutRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_auth_layout",
        "/_member_layout"
      ]
    },
    "/_auth_layout": {
      "filePath": "(layouts)/auth_layout.tsx",
      "children": [
        "/_auth_layout/auth/login"
      ]
    },
    "/_member_layout": {
      "filePath": "(layouts)/member_layout.tsx",
      "children": [
        "/_member_layout/",
        "/_member_layout/account/",
        "/_member_layout/reading-list/"
      ]
    },
    "/_member_layout/": {
      "filePath": "(member)/index.lazy.tsx",
      "parent": "/_member_layout"
    },
    "/_auth_layout/auth/login": {
      "filePath": "auth/login.lazy.tsx",
      "parent": "/_auth_layout"
    },
    "/_member_layout/account/": {
      "filePath": "(member)/account/index.tsx",
      "parent": "/_member_layout"
    },
    "/_member_layout/reading-list/": {
      "filePath": "(member)/reading-list/index.tsx",
      "parent": "/_member_layout"
    }
  }
}
ROUTE_MANIFEST_END */
